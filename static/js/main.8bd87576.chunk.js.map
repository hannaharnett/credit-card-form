{"version":3,"sources":["CreditCard.js","Input.js","FormErrors.js","FormContainer.js","App.js","serviceWorker.js","index.js"],"names":["cards","name","src","alt","changeLogo","number","logo","test","props","className","isFlipped","ccName","exp","arr","i","length","push","substr","join","addSlashToDate","cvc","Input","React","forwardRef","ref","id","title","type","value","onChange","onFocus","minLength","maxLength","htmlFor","autoComplete","FormErrors","errorMessage","formError","aria-label","CreditCardForm","state","formErrors","ccNameValid","numberValid","expValid","cvcValid","formValid","inputFocus","createRef","handleUserInput","bind","handleClickFlip","handleClickUnFlip","validateForm","handleSubmit","this","current","focus","event","target","setState","timeout","clearTimeout","setTimeout","validateField","fieldName","fieldValidationErrors","match","onSubmit","disabled","Component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bd87576.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./credit-card.css\";\n\nconst cards = [\n  {\n    name: \"blank\",\n    src:\n      \"https://upload.wikimedia.org/wikipedia/commons/d/df/Map-circle-grey.svg\",\n    alt: \"unknown logo\"\n  },\n  {\n    name: \"mastercard\",\n    src:\n      \"https://upload.wikimedia.org/wikipedia/commons/0/04/Mastercard-logo.png\",\n    alt: \"mastercard\"\n  },\n  {\n    name: \"visa\",\n    src:\n      \"https://upload.wikimedia.org/wikipedia/commons/5/53/Visa_2014_logo_detail.svg\",\n    alt: \"visa\"\n  },\n  {\n    name: \"dinersclub\",\n    src:\n      \"https://upload.wikimedia.org/wikipedia/commons/a/a6/Diners_Club_Logo3.svg\",\n    alt: \"dinersclub\"\n  },\n  {\n    name: \"americanExpress\",\n    src:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/30/American_Express_logo.svg/600px-American_Express_logo.svg.png\",\n    alt: \"american express\"\n  }\n];\n\nconst changeLogo = number => {\n  let logo = {src: '', alt:''};\n  // Sets logo by checking first digits\n  // Mastercard\n  if (/^(5[0-6])/.test(number)) {\n    logo.src = cards[1].src;\n    logo.alt = cards[1].alt;\n    // Visa\n  } else if (/^4/.test(number)) {\n    logo.src = cards[2].src;\n    logo.alt = cards[2].alt;\n    // Dinersclub\n  } else if (/^(3[689])/.test(number)) {\n    logo.src = cards[3].src;\n    logo.alt = cards[3].alt;\n    // American Express\n  } else if (/^(3[47])/.test(number)) {\n    logo.src = cards[4].src;\n    logo.alt = cards[4].alt;\n    // Blank logo\n  } else {\n    logo.src = cards[0].src;\n    logo.alt = cards[0].alt;\n  }\n  return logo;\n};\n\nconst addSlashToDate = exp => {\n  var split = 2;\n  var arr = [];\n\n  for (var i = 0; i < exp.length; i += split) {\n    arr.push(exp.substr(i, split));\n  }\n\n  return arr.join(\"/\");\n};\n\nexport default props => {\n  return (\n    <div className=\"card-container\">\n      <div className={\"card \" + (props.isFlipped ? \"is-flipped\" : \"\")}>\n        <div className=\"card-face-front card-face\">\n          <div className=\"card-logo\">\n            <img src={changeLogo(props.number).src} alt={changeLogo(props.number).alt} />\n          </div>\n          <div className=\"card-number\">{props.number}</div>\n          <div className=\"card-info\">\n            <div className=\"card-info-name\">\n              <div>{props.ccName ? props.ccName : \"Name on card\"}</div>\n            </div>\n            <div className=\"card-info-expiry\">\n              <div>{props.exp ? addSlashToDate(props.exp) : \"valid thru\"}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-face-back card-face\">\n          <div className=\"back-stripe\"></div>\n          <div className=\"security-code-stripe\">\n            <div className=\"security-code\">{props.cvc}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./input.css\";\n\nconst Input = React.forwardRef((props, ref) => {\n  const { id, title, type, value, onChange, onFocus, minLength, maxLength } = props;\n  return (\n    <div className=\"input-container\">\n      <label htmlFor={id} className=\"form-label\">\n        {title}\n      </label>\n      <input\n        id={id}\n        type={type}\n        name={id}\n        value={value}\n        onChange={onChange}\n        onFocus={onFocus}\n        minLength={minLength}\n        maxLength={maxLength}\n        autoComplete=\"off\"\n        ref={ref}\n      />\n    </div>\n  );\n});\n\nexport default Input;\n","import React from \"react\";\nimport \"./form-errors.css\";\n\nconst FormErrors = ({ formError }) => {\n  let errorMessage;\n  if (formError.length > 0) {\n    errorMessage = <p aria-label=\"error-message\" >{formError}</p>\n  } else {\n    errorMessage = \"\"\n  }\n  return (\n    <>\n      {errorMessage}\n    </>\n  );\n};\n\nexport default FormErrors;\n","import React, { Component } from \"react\";\nimport VirtualCreditCard from \"./CreditCard\";\nimport Input from \"./Input\";\nimport FormErrors from \"./FormErrors\";\nimport \"./form-container.css\";\n\nexport default class CreditCardForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ccName: \"\",\n      number: \"\",\n      exp: \"\",\n      cvc: \"\",\n      formErrors: { ccName: \"\", number: \"\", exp: \"\", cvc: \"\" },\n      ccNameValid: false,\n      numberValid: false,\n      expValid: false,\n      cvcValid: false,\n      formValid: false,\n      isFlipped: false\n    };\n    this.inputFocus = React.createRef();\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.handleClickFlip = this.handleClickFlip.bind(this);\n    this.handleClickUnFlip = this.handleClickUnFlip.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.handleSubmit = this.handleSubmit(this);\n  }\n  componentDidMount() {\n    this.inputFocus.current.focus();\n  }\n  handleUserInput(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value}, () => {\n      let timeout = null;\n      // Clearning timout first will prevent the previous task \n      // from executing if it has been less than 1000ms\n      clearTimeout(timeout);\n      timeout = setTimeout(() => this.validateField(name, value), 1000);\n    })\n  }\n  // Validate each input and updates error object in state\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let { ccNameValid, numberValid, expValid, cvcValid } = this.state;\n\n    switch (fieldName) {\n      case \"ccName\":\n        ccNameValid = (value.match(/^[a-zA-z]+$/) ? true : false);\n        fieldValidationErrors.ccName = (ccNameValid ? \"\" : \"Your name should only contain letters\");\n        break;\n      case \"number\":\n        numberValid = (value.match(/^[0-9]{16}/) ? true : false);\n        fieldValidationErrors.number = (numberValid\n          ? \"\"\n          : \"Please enter a 16 digits card number\");\n        break;\n      case \"exp\":\n        expValid = (value.match(/^[0-9]{4}/) ? true : false);\n        fieldValidationErrors.exp = (expValid ? \"\" : \"Please enter date in format: MMDD\");\n        break;\n      case \"cvc\":\n        cvcValid = (value.match(/^[0-9]{3}/) ? true : false);\n        fieldValidationErrors.cvc = (cvcValid ? \"\" : \"Security code should only be 3 digits\");\n        break;\n      default:\n        break;\n    }\n\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        ccNameValid: ccNameValid,\n        numberValid: numberValid,\n        expValid: expValid,\n        cvcValid: cvcValid\n      },\n      this.validateForm\n    );\n  }\n  // When every input is valid, whole form is valid\n  validateForm() {\n    let { ccNameValid, numberValid, expValid, cvcValid } = this.state;\n    this.setState({\n      formValid: ccNameValid && numberValid && expValid && cvcValid\n    });\n  }\n  // Flips card to show CVC on back when CVC input is in focus/clicked\n  handleClickFlip() {\n    this.setState({ isFlipped: true });\n  }\n  // Flips back to front side when NAME, NUMBER & EXP is in focus/clicked\n  handleClickUnFlip() {\n    this.setState({ isFlipped: false });\n  }\n  handleSubmit() {\n    this.setState({\n      ccName: \"\",\n      number: \"\",\n      exp: \"\",\n      cvc: \"\"\n    })\n  }\n  render() {\n    const { ccName, number, exp, cvc, formErrors, isFlipped } = this.state;\n    return (\n      <div>\n        <div className=\"container\">\n          <VirtualCreditCard\n            ccName={ccName}\n            number={number}\n            exp={exp}\n            cvc={cvc}\n            isFlipped={isFlipped}\n          />\n          <div className=\"form-container\">\n            <form onSubmit={this.handleSubmit}>\n              {/* <FormErrors formErrors={formErrors.number} /> */}\n              <div className=\"form-group\">\n                {/* Credit Card Number */}\n                <Input\n                  id=\"number\"\n                  name=\"number\"\n                  type=\"text\"\n                  title=\"Card Number\"\n                  value={number}\n                  onChange={this.handleUserInput}\n                  onFocus={this.handleClickUnFlip}\n                  maxLength=\"16\"\n                  ref={this.inputFocus}\n                />\n                <FormErrors formError={formErrors.number} />\n                {/* Cardholder's Name */}\n                <Input\n                  id=\"ccName\"\n                  name=\"ccName\"\n                  type=\"text\"\n                  title=\"Name on card\"\n                  value={ccName}\n                  onChange={this.handleUserInput}\n                  onFocus={this.handleClickUnFlip}\n                />\n                <FormErrors formError={formErrors.ccName} />\n              </div>\n              <div className=\"form-group\">\n                {/* Expiration date */}\n                <Input\n                  id=\"exp\"\n                  name=\"exp\"\n                  type=\"text\"\n                  title=\"Expiration date\"\n                  value={exp}\n                  onChange={this.handleUserInput}\n                  onFocus={this.handleClickUnFlip}\n                  maxLength=\"4\"\n                />\n                <FormErrors formError={formErrors.exp} />\n                {/* Security code */}\n                <Input\n                  id=\"cvc\"\n                  name=\"cvc\"\n                  type=\"text\"\n                  title=\"Security code\"\n                  value={cvc}\n                  onChange={this.handleUserInput}\n                  onFocus={this.handleClickFlip}\n                  maxLength=\"3\"\n                />\n                <FormErrors formError={formErrors.cvc} />\n              </div>\n              <input type=\"submit\" value=\"Submit\" disabled={!this.state.formValid} />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport FormContainer from \"./FormContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}